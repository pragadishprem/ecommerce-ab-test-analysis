DELIMITER //
CREATE PROCEDURE generate_test_data(IN num_rows INT)
BEGIN
    DECLARE i INT DEFAULT 1;

    -- Constants
    DECLARE num_users INT DEFAULT 100;  -- Max number of users
    DECLARE max_items_per_order INT DEFAULT 10; -- Max number of items per order

    -- Possible Values for Variables (for data diversity, will extract a random value from there)
    DECLARE device_types VARCHAR(255) DEFAULT 'desktop,mobile,tablet';
    DECLARE locations VARCHAR(255) DEFAULT 'USA,Canada,UK,Germany,France';
    DECLARE acquisition_channels VARCHAR(255) DEFAULT 'organic search,paid advertising,email marketing,social media,referral';
    DECLARE product_categories VARCHAR(255) DEFAULT 'Electronics,Clothing,Books,Home Goods,Beauty,Sports';

    WHILE i <= num_rows DO
        -- User and Date
        SET @user_id = FLOOR(RAND() * num_users) + 1;  -- Random User ID
        SET @order_date = DATE(NOW() - INTERVAL FLOOR(RAND() * 30) DAY);  -- Date is the past 30 days

        -- A/B Variant is also added
        SET @test_variant = IF(RAND() > 0.5, 'A', 'B');

        -- Simulate the purchase and variables associated
        SET @device_type = ELT(FLOOR(1 + RAND() * (LENGTH(device_types) - LENGTH(REPLACE(device_types, ',', '')) + 1)),
                               REPLACE(SUBSTRING(SUBSTRING_INDEX(device_types, ',', 1), LENGTH(SUBSTRING_INDEX(device_types, ',', 1 -1)) + 1, LENGTH(device_types)), ',', ''));

        SET @location = ELT(FLOOR(1 + RAND() * (LENGTH(locations) - LENGTH(REPLACE(locations, ',', '')) + 1)),
                             REPLACE(SUBSTRING(SUBSTRING_INDEX(locations, ',', 1), LENGTH(SUBSTRING_INDEX(locations, ',', 1 -1)) + 1, LENGTH(locations)), ',', ''));

        SET @acquisition_channel = ELT(FLOOR(1 + RAND() * (LENGTH(acquisition_channels) - LENGTH(REPLACE(acquisition_channels, ',', '')) + 1)),
                                    REPLACE(SUBSTRING(SUBSTRING_INDEX(acquisition_channels, ',', 1), LENGTH(SUBSTRING(SUBSTRING_INDEX(acquisition_channels, ',', 1 -1)) + 1, LENGTH(acquisition_channels)), ',', ''));

        SET @product_category = ELT(FLOOR(1 + RAND() * (LENGTH(product_categories) - LENGTH(REPLACE(product_categories, ',', '')) + 1)),
                                   REPLACE(SUBSTRING(SUBSTRING_INDEX(product_categories, ',', 1), LENGTH(SUBSTRING(SUBSTRING_INDEX(product_categories, ',', 1 -1)) + 1, LENGTH(product_categories)), ',', ''));

        SET @number_of_items = FLOOR(RAND() * max_items_per_order) + 1;

        SET @base_order_value = (RAND() * 50) + 10;
        SET @order_value = @base_order_value;

        -- Model higher order values with electronic items
        IF @product_category = 'Electronics' THEN
            SET @order_value = @order_value * (3.5 + RAND() * 1.5);
        END IF;

        -- Referral customers have high AOV for their time
        IF @acquisition_channel = 'referral' THEN
            SET @order_value = @order_value * (1.4 + RAND() * 0.4);
        END IF;

        -- Mobile discount for A
        IF @test_variant = 'A' AND @device_type = 'mobile' THEN
            SET @order_value = @order_value * 0.9;
        END IF;

        -- A higher cost of more
        SET @order_value = @order_value * @number_of_items;

        -- Round and test numbers to decimal
        SET @order_value = ROUND(@order_value, 2);

        -- Insert sample data
        INSERT INTO orders (user_id, order_date, order_value, test_variant, device_type, location, acquisition_channel, number_of_items, product_category)
        VALUES (@user_id, @order_date, @order_value, @test_variant, @device_type, @location, @acquisition_channel, @number_of_items, @product_category);

        SET i = i + 1;
    END WHILE;
END //

DELIMITER ;
CALL generate_test_data(1000);